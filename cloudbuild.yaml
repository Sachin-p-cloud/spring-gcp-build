steps:
#   Maven test run
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ["test"]
#   Maven packaging and build
  - name: maven:3-jdk-8
    entrypoint: mvn
    args: ["package", "-Dmaven.test.skip=true"]
#   Build Docker image
  - name: gcr.io/cloud-builders/docker
    args: ["build", "-t", "gcr.io/$PROJECT_ID/spring-gcp-test:$COMMIT_SHA", "--build-arg=JAR_FILE=target/gcp-0.0.1-SNAPSHOT.jar", "."]
  - name: maven:3-jdk-11
    id: SonarCloud Build
    entrypoint: mvn
    args:
    - 'verify'
    - 'org.sonarsource.scanner.maven:sonar-maven-plugin:sonar'
    - '-Dsonar.login=72d8b88d48b57107ff0944578b52dfccd2c91180'
    - '-Dsonar.host.url=https://sonarcloud.io'
    - '-Dsonar.projectKey=Sachin-p-cloud_spring-gcp-build'
    - '-Dsonar.organization=sachin-p-cloud'

##  Push the container image to Container Registry
#  - name: gcr.io/cloud-builders/docker
#    args: [ 'push', 'gcr.io/$PROJECT_ID/spring-gcp-test:$COMMIT_SHA' ]
##  Deploy container image to Cloud Run
#  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
#    entrypoint: gcloud
#    args:
#      - 'run'
#      - 'deploy'
#      - 'spring-gcp-test'
#      - '--image'
#      - 'gcr.io/$PROJECT_ID/spring-gcp-test:$COMMIT_SHA'
#      - '--region'
#      - 'us-central1'
#images: ["gcr.io/$PROJECT_ID/spring-gcp-test:$COMMIT_SHA"]